name: Java CI with Maven

on:
  push:
    branches:
      - 'tests-**'
      - 'feature/**'
      - 'feature-**'
  pull_request:
    branches: [ "development" ]

permissions:
  contents: write
  security-events: write

jobs:
  build:
    runs-on: ubuntu-latest
    environment: env  # Specify the environment to use environment-specific secrets

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set Environment Variables
        run: |
          echo "SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}" >> $GITHUB_ENV
          echo "OPENWEATHER_API_KEY=${{ secrets.OPENWEATHER_KEY }}" >> $GITHUB_ENV
          echo "LOCAL_API_KEY=${{ secrets.LOCAL_API_KEY }}" >> $GITHUB_ENV

      - name: Replace API Key in environment.prod.ts and test
        run: |
          sed -i "s/REPLACE_THIS_WITH_API_KEY/${{ secrets.LOCAL_API_KEY }}/g" ./frontend/src/environments/environment.prod.ts
          if grep -q "REPLACE_THIS_WITH_API_KEY" ./frontend/src/environments/environment.prod.ts; then
            echo "Replacement failed."
            exit 1
          else
            echo "Replacement successful."
          fi
          
          
      - name: Setup Node js For angular
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name : npm install dependencies
        run: npm install
        working-directory: './frontend'

      - name : run Angular tests in jest
        run: npm run test:coverage
        working-directory: ./frontend

      - name : Install Angular Cli
        run : npm install -g @angular/cli@17.3.5
        working-directory: ./frontend

      - name: Build Angular Project
        run: ng build --base-href "/"
        working-directory: ./frontend

      - name: Copy angular build artifacts
        run: |
          mkdir -p ./src/main/resources/static
          cp -R ./frontend/dist/frontend/browser/* ./src/main/resources/static/
        shell : bash

      - name: List files in the static directory
        run: ls -lah ./src/main/resources/static/
        shell: bash



      - name: Build and test with Maven
        run: mvn clean install -Pprod  # Specify the Maven profile here

      - name: Generate JaCoCo coverage report
        run: mvn clean test jacoco:report





      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: |
            ./target/site/jacoco/jacoco.xml
            ./frontend/coverage/lcov.info
          slug: tomyjany/weatherApp
          flags: backend,frontend
